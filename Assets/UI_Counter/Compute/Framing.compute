#pragma kernel CSMain

uint width;
uint height;

Texture2D<float4> Input;
RWTexture2D<float4> Result;

float first;
float second;
float third;

float4 firstColor;
float4 secondColor;
float4 thirdColor;

float2 lightDir;

int max(int a, int b) {
	if (a > b)
		return a;
	return b;
}

int min(int a, int b) {
	if (a < b)
		return a;
	return b;
}

float getShadow(float distance) {
	distance -= first;
	return 0;
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	if (id.x >= width || id.y >= height)
		return;

	float closest = third + 10;

	for(int x = max(0, id.x - third); x < min(width, id.x + third + 1); x++)
		for (int y = max(0, id.y - third); y < min(height, id.y + third + 1); y++)
			if (Input[uint2(x, y)].a > 0.5f) {
				float distance = sqrt((id.x - x) * (id.x - x) + (id.y - y) * (id.y - y));
				if (distance < closest)
					closest = distance;
			}

	if (closest == 0)
		Result[id.xy] = Input[id.xy];
	else if (closest <= first)
		Result[id.xy] = firstColor;
	else if (closest <= second) {
		Result[id.xy] = secondColor;

	}
	else if (closest <= third)
		Result[id.xy] = thirdColor;
	else
		Result[id.xy] = float4(0, 0, 0, 0);

}
